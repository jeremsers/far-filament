---
interface Props {
	title: string;
	subtitle: string;
	price: string;
	duration: string;
	description: string;
	features: string[];
	conditions?: string[];
	benefits?: string[];
	calendlyLink: string;
	modalId: string;
	image?: any;
	isPremium?: boolean;
}

const {
	title,
	subtitle,
	price,
	duration,
	description,
	features,
	conditions = [],
	benefits = [],
	calendlyLink,
	modalId,
	image,
	isPremium = false,
} = Astro.props;

import { Image } from "astro:assets";
import packSessions from "../data/packSessions.json";

// Lien pour le rendez-vous découverte
const calendlyLinkDiscovery =
	"https://calendly.com/laurence-blondeau-essence-et-conscience/30min";

// Extraire le type de pack à partir de l'ID du modal (modal-burnout -> burnout)
const packType = modalId.replace("modal-", "");
// Récupérer les sessions pour ce pack
const sessions = packSessions[packType] || [];
---

<div class="modal" id={modalId} aria-hidden="true">
	<div class="modal-overlay" data-close></div>
	<div
		class="modal-container"
		role="dialog"
		aria-labelledby={`${modalId}-title`}
	>
		{
			image && (
				<div class="modal-image">
					<Image src={image} alt={title} width={800} height={300} />
					<div class={`image-overlay ${isPremium ? "premium-overlay" : ""}`} />
					{isPremium && <div class="premium-badge">Premium</div>}
				</div>
			)
		}

		<div class="modal-header">
			<h2 id={`${modalId}-title`}>{title}</h2>
			<button class="close-button" data-close aria-label="Fermer">×</button>
		</div>

		<div class="modal-content">
			<div class="service-details">
				<div class="meta">
					<p class="duration">{duration}</p>
					<p class="price">{price}</p>
				</div>

				<div class="description">
					<p>{description}</p>
				</div>

				<div class="sessions-section">
					<h3>
						{
							packType === "renaissance"
								? "Les 6 étapes de votre transformation"
								: packType === "burnout"
									? "Les 6 étapes de votre transformation"
									: packType === "essence"
										? "Les 8 étapes de votre transformation"
										: "Les étapes de votre accompagnement"
						}
					</h3>
					<div class="sessions-container">
						{
							sessions.map((session, index) => (
								<div class="session-card">
									<div class="session-header">
										<span class="session-number">{index + 1}</span>
										<h4>{session.title}</h4>
									</div>
									<div class="session-content">
										<p>{session.description}</p>
									</div>
								</div>
							))
						}
					</div>
				</div>

				<div class="features-grid">
					{
						benefits.length > 0 && (
							<div class="benefits">
								<h3>Ce que vous allez vivre :</h3>
								<ul>
									{benefits.map((benefit) => (
										<li>{benefit}</li>
									))}
								</ul>
							</div>
						)
					}
				</div>

				{
					conditions.length > 0 && (
						<div class="conditions">
							<h3>Conditions :</h3>
							<ul>
								{conditions.map((condition) => (
									<li>{condition}</li>
								))}
							</ul>
						</div>
					)
				}

				<div class="co-construction">
					<h3>Un accompagnement en co-construction</h3>
					<p>
						Chaque séance s'adapte à votre évolution. Vous êtes pleinement
						acteur(trice) du processus et votre engagement est essentiel pour créer
						des changements profonds et durables.
					</p>
				</div>

				<div class="discovery-required">
					<div class="discovery-icon">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							viewBox="0 0 24 24"
							width="24"
							height="24"
							fill="none"
							stroke="currentColor"
							stroke-width="2"
							stroke-linecap="round"
							stroke-linejoin="round"
						>
							<circle cx="12" cy="12" r="10"></circle>
							<line x1="12" y1="8" x2="12" y2="12"></line>
							<line x1="12" y1="16" x2="12.01" y2="16"></line>
						</svg>
					</div>
					<div class="discovery-content">
						<h3>Étape préalable requise</h3>
						<p>
							Pour réserver ce pack, un appel découverte gratuit de 30 minutes est
							nécessaire. Cet appel nous permettra de faire connaissance, d'évaluer vos
							besoins et de confirmer que ce programme est adapté à votre situation.
						</p>
					</div>
				</div>
			</div>

			<div class="modal-actions">
				<a
					href={calendlyLinkDiscovery}
					target="_blank"
					class="cta-btn discovery-btn"
				>
					Prendre un rendez-vous découverte gratuit
				</a>
				<p class="action-note">Étape préalable requise avant de réserver ce pack</p>
			</div>
		</div>
	</div>
</div>

<script>
	// Find all modals on the page
	const modals = document.querySelectorAll<HTMLElement>(".modal");

	// Add click handlers to all elements with data-modal attribute
	document.querySelectorAll<HTMLElement>("[data-modal]").forEach((trigger) => {
		trigger.addEventListener("click", (e) => {
			e.preventDefault();
			const modalId = trigger.getAttribute("data-modal");
			if (modalId) {
				const modal = document.getElementById(modalId);
				if (modal) {
					modal.classList.add("active");
					document.body.style.overflow = "hidden";
				}
			}
		});
	});

	// Add close handlers
	modals.forEach((modal) => {
		modal.querySelectorAll<HTMLElement>("[data-close]").forEach((closeBtn) => {
			closeBtn.addEventListener("click", () => {
				modal.classList.remove("active");
				document.body.style.overflow = "";
			});
		});

		// Close on escape key
		document.addEventListener("keydown", (e) => {
			if (e.key === "Escape" && modal.classList.contains("active")) {
				modal.classList.remove("active");
				document.body.style.overflow = "";
			}
		});
	});
</script>

<style lang="scss">
	.modal {
		display: none;
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		z-index: 1000;

		&.active {
			display: block;
		}
	}

	.modal-overlay {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(0, 0, 0, 0.5);
		backdrop-filter: blur(5px);
	}

	.modal-container {
		position: fixed;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		background: $bg-light;
		border-radius: $border-radius-lg;
		width: 90%;
		max-width: 800px;
		max-height: 90vh;
		display: flex;
		flex-direction: column;
		box-shadow: $shadow-xl;
		overflow: hidden;
	}

	.modal-image {
		width: 100%;
		height: 800px;
		position: relative;
		overflow: hidden;

		img {
			width: 100%;
			height: 100%;
			object-fit: cover;
			object-position: center;
		}

		.image-overlay {
			position: absolute;
			bottom: 0;
			left: 0;
			width: 100%;
			height: 50%;
			background: linear-gradient(to top, rgba($bg-light, 0.9), transparent);
			z-index: 1;
		}

		.premium-overlay {
			background: linear-gradient(
				to top,
				rgba(mix($bg-light, $primary-color, 90%), 0.9),
				transparent
			);
		}

		.premium-badge {
			position: absolute;
			top: 15px;
			right: 15px;
			background-color: $secondary-color;
			color: white;
			padding: 5px 12px;
			border-radius: $border-radius-sm;
			font-size: 0.9em;
			font-weight: bold;
			box-shadow: $shadow-sm;
			z-index: 2;
		}
	}

	.modal-header {
		padding: 20px 25px;
		border-bottom: 1px solid $border-color;
		display: flex;
		justify-content: space-between;
		align-items: center;
		flex-shrink: 0;
		background: $bg-light;
		position: relative;
		z-index: 2;

		h2 {
			margin: 0;
			color: $primary-color;
			font-size: clamp(1.5em, 4vw, 1.8em);
			line-height: 1.2;
		}

		.close-button {
			background: none;
			border: none;
			font-size: 2em;
			cursor: pointer;
			color: $text-light;
			padding: 5px;
			margin-left: 10px;
			flex-shrink: 0;

			&:hover {
				color: $text-color;
			}
		}
	}

	.modal-content {
		padding: 0 25px;
		flex: 1;
		overflow-y: auto;
		-webkit-overflow-scrolling: touch;

		.service-details {
			display: flex;
			flex-direction: column;
			gap: 25px;

			.meta {
				display: flex;
				justify-content: space-between;
				align-items: center;
				flex-wrap: wrap;
				gap: 15px;
				padding: 20px 0;
				border-bottom: 1px solid $border-color;

				.duration,
				.price {
					font-size: clamp(1em, 3vw, 1.2em);
					font-weight: bold;
					color: $secondary-color;
				}
			}

			.description {
				font-size: 1.1em;
				line-height: 1.6;
				color: $text-color;
				text-align: justify;
				padding-block: 10px;
			}

			.sessions-section {
				margin-top: 10px;

				h3 {
					color: $primary-color;
					margin-bottom: 20px;
					font-size: clamp(1.2em, 3vw, 1.4em);
					text-align: center;
				}

				.sessions-container {
					display: flex;
					flex-direction: column;
					gap: 20px;
				}

				.session-card {
					background-color: rgba($primary-color, 0.05);
					border-radius: $border-radius-md;
					padding: 20px;
					box-shadow: $shadow-sm;

					.session-header {
						display: flex;
						align-items: center;
						gap: 15px;
						margin-bottom: 10px;

						.session-number {
							background-color: $secondary-color;
							color: white;
							width: 30px;
							height: 30px;
							border-radius: 50%;
							display: flex;
							align-items: center;
							justify-content: center;
							font-weight: bold;
							flex-shrink: 0;
						}

						h4 {
							margin: 0;
							color: $primary-color;
							font-size: 1.1em;
						}
					}

					.session-content {
						padding-left: 45px;

						p {
							margin: 0;
							line-height: 1.5;
							color: $text-color;
						}
					}
				}
			}

			.features-grid {
				display: grid;
				grid-template-columns: 1fr;
				gap: 30px;
				margin-bottom: 20px;
			}

			.benefits,
			.conditions,
			.co-construction {
				h3 {
					color: $primary-color;
					margin-bottom: 15px;
					font-size: clamp(1.1em, 3vw, 1.2em);
				}

				ul {
					list-style: none;
					padding: 0;
					display: flex;
					flex-direction: column;
					gap: 12px;

					li {
						padding-left: 25px;
						position: relative;
						line-height: 1.4;
						font-size: clamp(0.9em, 2.5vw, 1em);

						&:before {
							content: "✓";
							color: $secondary-color;
							position: absolute;
							left: 0;
						}
					}
				}
			}

			.co-construction {
				background-color: rgba($secondary-color, 0.1);
				padding: 20px;
				border-radius: $border-radius-md;

				p {
					margin: 0;
					line-height: 1.5;
				}
			}

			.conditions {
				border-top: 1px solid $border-color;
				padding-top: 20px;
				margin-bottom: 20px;
			}

			.discovery-required {
				display: flex;
				background-color: rgba($primary-color, 0.1);
				padding: 20px;
				border-radius: $border-radius-md;
				margin-top: 20px;
				gap: 15px;
				align-items: flex-start;

				.discovery-icon {
					flex-shrink: 0;
					color: $primary-color;
					margin-top: 3px;
				}

				.discovery-content {
					h3 {
						color: $primary-color;
						margin: 0 0 10px 0;
						font-size: clamp(1.1em, 3vw, 1.2em);
					}

					p {
						margin: 0;
						line-height: 1.5;
					}
				}
			}
		}
	}

	.modal-actions {
		padding: 20px 25px;
		border-top: 1px solid $border-color;
		text-align: center;
		flex-shrink: 0;
		background: $bg-light;
		position: sticky;
		bottom: 0;
		z-index: 2;
		border-radius: 0 0 $border-radius-lg $border-radius-lg;

		.action-note {
			margin-top: 10px;
			font-size: 0.9em;
			color: $text-light;
			font-style: italic;
		}

		.cta-btn {
			display: inline-block;
			padding: clamp(12px, 3vw, 15px) clamp(25px, 5vw, 40px);
			background-color: $secondary-color;
			color: white;
			text-decoration: none;
			border-radius: $border-radius-md;
			font-size: clamp(1em, 2.5vw, 1.1em);
			transition: all 0.3s ease;
			width: min(100%, 500px);

			&:hover {
				background-color: $hover-color-alt;
				transform: scale(1.05);
			}
		}

		.discovery-btn {
			background-color: $secondary-color !important;

			&:hover {
				background-color: darken($secondary-color, 10%) !important;
			}
		}
	}

	@media (max-width: $mobile) {
		.modal-container {
			width: 95%;
			height: 95vh;
			border-radius: $border-radius-md;
		}

		.modal-image {
			height: 200px;
		}

		.modal-header {
			padding: 15px 20px;
		}

		.modal-content {
			padding: 0 15px;

			.service-details {
				gap: 20px;

				.meta {
					padding: 15px 0;
					justify-content: center;
					text-align: center;

					.duration,
					.price {
						width: 100%;
					}
				}

				.description {
					font-size: 1em;
				}

				.features-grid {
					grid-template-columns: 1fr;
					gap: 20px;
				}

				.sessions-section {
					.session-card {
						padding: 15px;

						.session-header {
							gap: 10px;
						}

						.session-content {
							padding-left: 40px;
						}
					}
				}
			}
		}

		.modal-actions {
			padding: 15px 20px;

			.cta-btn {
				width: 100%;
			}
		}
	}
</style>
